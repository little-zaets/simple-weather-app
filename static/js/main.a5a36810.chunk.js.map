{"version":3,"sources":["components/Title.js","components/Form.js","components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Title","className","Form","props","onSubmit","getWeather","type","name","placeholder","onClick","resetWeather","Weather","city","country","temperature","humidity","description","error","App","e","a","preventDefault","target","elements","value","fetch","api_call","json","data","console","log","setState","main","temp","sys","weather","initialState","state","bind","this","form","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAqBeA,EAnBD,kBACb,gCACC,oBAAIC,UAAU,yBAAd,+BACA,oBAAIA,UAAU,4BAAd,6DCQaC,EAXF,SAACC,GAAD,OACZ,uBAAMC,SAAUD,EAAME,WAAtB,UACC,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,YAAY,iBAC3C,uBAAOF,KAAK,OAAOC,KAAK,UAAUC,YAAY,oBAC9C,iDACA,wBAAQC,QAASN,EAAMO,aAAvB,uBCwBaC,EA7BC,SAACR,GAAD,OACf,sBAAKF,UAAU,gBAAf,UACEE,EAAMS,MAAQT,EAAMU,SACpB,oBAAGZ,UAAU,eAAb,sBAEC,uBAAMA,UAAU,iBAAhB,cAAmCE,EAAMS,KAAzC,KAAiDT,EAAMU,cAGxDV,EAAMW,aACN,oBAAGb,UAAU,eAAb,yBAEC,uBAAMA,UAAU,iBAAhB,cAAmCE,EAAMW,kBAG1CX,EAAMY,UACN,oBAAGd,UAAU,eAAb,sBAEC,uBAAMA,UAAU,iBAAhB,cAAmCE,EAAMY,eAG1CZ,EAAMa,aACN,oBAAGf,UAAU,eAAb,wBAEC,uBAAMA,UAAU,iBAAhB,cAAmCE,EAAMa,kBAG1Cb,EAAMc,OAAS,kCAAKd,EAAMc,aCsDdC,E,kDAxEb,aAAe,IAAD,8BACZ,gBAkBFb,WAnBc,uCAmBD,WAAOc,GAAP,qBAAAC,EAAA,6DACXD,EAAEE,iBACET,EAAOO,EAAEG,OAAOC,SAASX,KAAKY,MAC9BX,EAAUM,EAAEG,OAAOC,SAASV,QAAQW,MAH7B,SAIYC,MAAM,qDAAD,OAC2Bb,EAD3B,YACmCC,EADnC,kBA1BhB,mCA0BgB,kBAJjB,cAILa,EAJK,gBAOQA,EAASC,OAPjB,OAOLC,EAPK,OAQPhB,GAAQC,GACVgB,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACZjB,YAAac,EAAKI,KAAKC,KACvBrB,KAAMgB,EAAKrB,KACXM,QAASe,EAAKM,IAAIrB,QAClBE,SAAUa,EAAKI,KAAKjB,SACpBC,YAAaY,EAAKO,QAAQ,GAAGnB,YAC7BC,MAAO,KAETL,EAAO,GACPC,EAAU,IAEV,EAAKkB,SAAS,EAAKK,cArBV,4CAnBC,sDAEZ,EAAKA,aAAe,CAClBtB,YAAa,GACbF,KAAM,GACNC,QAAS,GACTE,SAAU,GACVC,YAAa,GACbC,MAAO,MAET,EAAKoB,MAAQ,EAAKD,aAClB,EAAK1B,aAAe,EAAKA,aAAa4B,KAAlB,gBAXR,E,gDAad,SAAanB,GACXA,EAAEE,iBACFkB,KAAKR,SAASQ,KAAKH,cACnBjB,EAAEG,OAAOkB,KAAK,GAAGhB,MAAQ,GACzBL,EAAEG,OAAOkB,KAAK,GAAGhB,MAAQ,K,oBA0B3B,WACE,OACE,8BACE,qBAAKvB,UAAU,UAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,2BAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,0BAAf,UACE,cAAC,EAAD,CAAMI,WAAYkC,KAAKlC,WAAYK,aAAc6B,KAAK7B,eACtD,cAAC,EAAD,CACEI,YAAayB,KAAKF,MAAMvB,YACxBF,KAAM2B,KAAKF,MAAMzB,KACjBC,QAAS0B,KAAKF,MAAMxB,QACpBE,SAAUwB,KAAKF,MAAMtB,SACrBC,YAAauB,KAAKF,MAAMrB,YACxBC,MAAOsB,KAAKF,MAAMpB,0B,GA9DpBwB,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a5a36810.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Title = () => (\n\t<div>\n\t\t<h1 className=\"title-container__title\">React Weather App</h1>\n\t\t<h5 className=\"title-container__subtitle\">\n\t\t\tGet the forecast you need, when you need it\n\t\t</h5>\n\t</div>\n);\n\n// class Title extends React.Component {\n// \trender() {\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\t<h1>React Weather App</h1>\n// \t\t\t\t<h5>Look up temperature, conditions, and more...</h5>\n// \t\t\t</div>\n// \t\t);\n// \t}\n// }\nexport default Title;\n","import React from 'react';\n\nconst Form = (props) => (\n\t<form onSubmit={props.getWeather}>\n\t\t<input type=\"text\" name=\"city\" placeholder=\"Enter a city\" />\n\t\t<input type=\"text\" name=\"country\" placeholder=\"Enter a country\" />\n\t\t<button>Get Weather</button>\n\t\t<button onClick={props.resetWeather}>\n\t\t\tReset\n\t\t</button>\n\t</form>\n);\n\nexport default Form;\n\n","import React from \"react\";\n\nconst Weather = (props) => (\n\t<div className=\"weather__info\">\n\t\t{props.city && props.country && (\n\t\t\t<p className=\"weather__key\">\n\t\t\t\tLocation: \n\t\t\t\t<span className=\"weather__value\"> {props.city}, {props.country}</span>\n\t\t\t</p>\n\t\t)}\n\t\t{props.temperature && (\n\t\t\t<p className=\"weather__key\">\n\t\t\t\tTemperature: \n\t\t\t\t<span className=\"weather__value\"> {props.temperature}</span>\n\t\t\t</p>\n\t\t)}\n\t\t{props.humidity && (\n\t\t\t<p className=\"weather__key\">\n\t\t\t\tHumidity: \n\t\t\t\t<span className=\"weather__value\"> {props.humidity}</span>\n\t\t\t</p>\n\t\t)}\n\t\t{props.description && (\n\t\t\t<p className=\"weather__key\">\n\t\t\t\tConditions: \n\t\t\t\t<span className=\"weather__value\"> {props.description}</span>\n\t\t\t</p>\n\t\t)}\n\t\t{props.error && <p> {props.error}</p>}\n\t</div>\n);\nexport default Weather;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Title from \"./components/Title\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\n\nconst API_KEY = \"a7df53972a1ed5c9bc47ebe662517113\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.initialState = {\n      temperature: \"\",\n      city: \"\",\n      country: \"\",\n      humidity: \"\",\n      description: \"\",\n      error: null\n    };\n    this.state = this.initialState;\n    this.resetWeather = this.resetWeather.bind(this);\n  }\n  resetWeather(e) {\n    e.preventDefault();\n    this.setState(this.initialState);\n    e.target.form[0].value = \"\";\n    e.target.form[1].value = \"\";\n  }\n  getWeather = async (e) => {\n    e.preventDefault();\n    let city = e.target.elements.city.value;\n    let country = e.target.elements.country.value;\n    const api_call = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`\n    );\n    const data = await api_call.json();\n    if (city && country) {\n      console.log(data);\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\"\n      });\n      city = \"\";\n      country = \"\";\n    } else {\n      this.setState(this.initialState);\n    };\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <div className=\"main\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-xs-5 title-container\">\n                  <Title />\n                </div>\n                <div className=\"col-xs-7 form-container\">\n                  <Form getWeather={this.getWeather} resetWeather={this.resetWeather}/>\n                  <Weather\n                    temperature={this.state.temperature}\n                    city={this.state.city}\n                    country={this.state.country}\n                    humidity={this.state.humidity}\n                    description={this.state.description}\n                    error={this.state.error}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}